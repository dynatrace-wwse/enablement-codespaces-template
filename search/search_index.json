{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"1. About","text":"<p>Support Policy</p> <p>This is an enablement project created by the Center of Excellence - Enablement Team at Dynatrace.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p>"},{"location":"#whats-this-tutorial-all-about","title":"What's this tutorial all about","text":"<p>In this tutorial we'll learn:</p> <ul> <li>how this codespace is being built</li> <li>how is the separation of concerns of the architecture in this devcontainer</li> <li>the functions.sh file</li> <li>create Github documentation and publish it</li> <li>How MKDocs work</li> <li>monitor the Github documentation</li> <li>monitor the instatiation of codespaces (learn about the usage of a specific enablement)</li> <li>exposing ports</li> <li>tipp &amp; tricks</li> <li>troubleshooting</li> </ul> <p> </p> <p>What will we do</p> <p>In this tutorial we will learn how easy it is to create an enablement using codespaces and a Kubernetes cluster!</p> <ul> <li>Yes! let's begin </li> </ul>"},{"location":"2-getting-started/","title":"2. Getting started","text":"<p>Requirements</p> <ul> <li>A Grail enabled Dynatrace SaaS Tenant (sign up here).</li> <li>A GitHub account to interact with the demo repository.</li> </ul>"},{"location":"2-getting-started/#1-dynatrace-tenant-setup","title":"1. Dynatrace Tenant Setup","text":"<p>You will need a Dynatrace SaaS tenant with a DPS pricing model and the 'Code Monitoring' rate card should be associated with it. In addition the application needs to be monitored with Dynatrace FullStack mode. The application runtime: Java, NodeJS.</p>"},{"location":"2-getting-started/#11-enable-observability-for-developers","title":"1.1 Enable Observability for Developers","text":"<ul> <li>Go to Settings &gt; Preferences &gt; OneAgent features.<ul> <li>Enable the Java Live-Debugger, Node.js Live-Debugger, or both, depending on your needs.</li> </ul> </li> <li>Go to Settings &gt; Observability for Developers &gt; Enable Observability for Developers</li> </ul> <p>More information can be found here</p>"},{"location":"2-getting-started/#12-set-iam-polocies","title":"1.2 Set IAM Polocies","text":"<p>We take security very seriously. So let's create a policy to set user-level Live Debugging breakpoints. </p> <p>We need two policies for your user to be able to set breakpoints and to read snapshots.  For this we go to **Account Management &gt; Identity &amp; Access management &gt; + Policy **</p> <p>Set breakpoints <pre><code>ALLOW storage.application.snapshots:set;\n</code></pre></p> <p>Read Snapshopts <pre><code>ALLOW storage.application.snapshots:read;\nALLOW storage:buckets:read WHERE storage:table-name = \"application.snapshots\";\n</code></pre></p> <p>The policy should look like this:</p> <p></p> <p>Then we bind it to a user group. In this case since we are admins, let's bind the policy to the Admin group. Notice that the created policy is for an Admin and also for a Developer. Since we allow to <code>read</code> and <code>set</code> breakpoints but also to <code>manage</code> breakpoints which is explained here.</p> <p>Go to Group Management &gt; Select Admin Group &gt; + Permission  (and bind the policy) </p> <p>Like this you have the fine control to give your developers, SRE teams and whoever you want to set breakpoints and read the snapshots. For more granular access please continue reading here </p>"},{"location":"2-getting-started/#13-enable-live-debugger-activegate-module","title":"1.3 Enable Live Debugger ActiveGate module","text":"<p>Now we need to enable the Live Debugger ActiveGate module:</p> <p><pre><code>#Set debugging_enabled to true in the custom.properties file.\nactiveGate:\n    customProperties:\n      value: |\n        [debugging]\n        debugging_enabled = true\n</code></pre> This is already set up for you in the codespaces automatically in the Dynakube.yaml file so no need to restart the ActiveGate.</p>"},{"location":"2-getting-started/#2-getting-the-permissions-for-monitoring-the-kubernetes-cluster-with-dynatrace","title":"2. Getting the permissions for monitoring the Kubernetes Cluster with Dynatrace","text":"<p>This codespace has everything automated for you so you can focus on what matters which in this enablement is to learn about the Live Debugging capabilities of the Dynatrace Platform.  You'll need two tokens:</p> <ol> <li>Operator Token</li> <li>Ingest Token </li> </ol> <p>We will get this two very easy from the Kubernetes App. </p>"},{"location":"2-getting-started/#21-get-the-operator-token-and-the-ingest-token-from-the-kubernetes-app","title":"2.1. Get the Operator Token and the Ingest Token from the Kubernetes App","text":"<ol> <li>Open the Kubernetes App (CTRL + K then type Kubernetes for fast access)</li> <li>Select the + Add cluster button</li> <li>Scroll down to the section Install Dynatrace Operator </li> <li>Click on generate Token for the 'Dynatrace Operator' and save it to your Notepad</li> <li>Click on generate Token for the 'Data Ingest Token' and save it to your Notepad</li> <li>You can close the Kubernetes App, we don't need it, we just needed the tokens.</li> </ol> <p>Let's launch the Codespace</p> <p>Now we are ready to launch the Codespace! You'll need your tenant and the two tokens previuosly gathered from above. When you enter the tenant please enter it without the 'apps' part, for production tenants eg. abc123 for live -&gt; https://abc123.live.dynatrace.com and for sprint -&gt; https://abc123.sprint.dynatracelabs.com no apps in the URL.</p> <ul> <li>Let's launch Codespaces</li> </ul>"},{"location":"3-content/","title":"Codespaces","text":""},{"location":"3-content/#1-launch-codespace","title":"1. Launch Codespace","text":""},{"location":"3-content/#11-codespaces-configuration","title":"1.1 Codespaces configuration","text":"<p>Branch, Machine sizing &amp; secrets</p> <ul> <li>Branch<ul> <li>select the main branch</li> </ul> </li> <li>Machine sizing<ul> <li>As a machine type select 4-core</li> </ul> </li> <li>Secrets (enter your credentials within the following variables)<ul> <li>DT_TENANT</li> <li>DT_OPERATOR_TOKEN</li> <li>DT_INGEST_TOKEN</li> </ul> </li> </ul>"},{"location":"3-content/#2-while-the-codespace-is-set-up-for-you-learn-powerful-usecases-for-live-debugging","title":"2. While the Codespace is set-up for you, learn powerful usecases for Live Debugging","text":"<p>We know your time is very valuable. This codespace takes around 6 minutes to be fully operational. A local Kubernetes (kind) cluster monitored by Dynatrace will be configured and in it a sample application, the TODO app will be deployed. To make your experience best, we are also installing and configuring tools like:</p> <p>k9s kubectl helm node jq python3 gh</p> <p>While the Codespace is being set up for you, here is a 6 minute read about powerful use cases beyond live debugging in our Dynatrace blog.</p> <p></p>"},{"location":"3-content/#3-explore-what-has-been-deployed","title":"3. Explore what has been deployed","text":"<p>Your Codespace has now deployed the following resources:</p> <ul> <li> <p>A local Kubernetes (kind) cluster monitored by Dynatrace, with some pre-deployed apps   that will be used later in the demo.</p> </li> <li> <p>After a couple of minutes, you'll see this screen in your codespaces terminal. It contains the links to the local expose labguide and the UI of the TODO application which we will Live Debug. </p> </li> </ul>"},{"location":"3-content/#4-tips-tricks","title":"4. Tips &amp; Tricks","text":"<p>We want to boost your learning and try to make your DEV experience as smooth as possible with Dynatrace trainings. Your Codespaces have a couple of convenience features added. </p>"},{"location":"3-content/#show-the-greeting","title":"Show the greeting","text":"<p>In the terminal, there are functions loaded for your convenience. By creating a new Terminal the Greeting will be shown that includes the links to the exposed apps, the Github  pages, the Github Repository, the Dynatrace Tenant that is bound to this devcontainer and some of the tools installed.</p> <p>You can create a new Terminal directly in VSCode, type <code>zsh</code> or call the function <code>printGreeting</code> and that will print the greeting with the most relevant information.</p>"},{"location":"3-content/#navigating-in-your-local-kubernetes","title":"Navigating in your local Kubernetes","text":"<p>The client <code>kubectl</code> and <code>k9s</code>are configured so you can navigate in your local Kubernetes like butter.  </p>"},{"location":"3-content/#exposing-the-apps-to-the-public","title":"Exposing the apps to the public","text":"<p>The apps MKdocs and TODO app are being exposed in the devcontainer to your localhost. If you want to make the endpoints public accesible, just go to the ports section in VsCode, right click on them and change the visibility to public.</p>"},{"location":"3-content/#5-troubleshooting","title":"5. Troubleshooting","text":""},{"location":"3-content/#exposing-the-app","title":"Exposing the App","text":"<p>The todo app is being exposed via <code>kubectl port-forward ...</code> if the container is stopped and started again or if you delete/recicle the pod the port-forwarding process might crash. You can easily see what is being exposed by typing the function <code>showOpenPorts</code> </p> <pre><code>showOpenPorts(){\n  sudo netstat -tulnp\n}\n</code></pre> <p>and to expose the TODO app, type <code>exposeTodoApp</code>, </p> <pre><code>exposeTodoApp(){\n  printInfo \"Exposing Todo App in your dev.container\"\n  nohup kubectl port-forward service/todoapp 8080:8080  -n todoapp --address=\"0.0.0.0\" &gt; /tmp/kubectl-port-forward.log 2&gt;&amp;1 &amp;\n}\n</code></pre> <ul> <li>Let's start our Bug hunting quest</li> </ul>"},{"location":"cleanup/","title":"5. Cleanup","text":"<p>Deleting the codespace from inside the container</p> <p>We like to make your life easier, for convenience there is a function loaded in the shell of the Codespace for deleting the codespace, just type <code>deleteCodespace</code>. This will trigger the deletion of the codespace.</p> <p>Another way to do this is by going to https://github.com/codespaces and delete the codespace.</p> <p>You may also want to deactivate or delete the API token needed for this lab.</p> <ul> <li>Ressources</li> </ul>"},{"location":"resources/","title":"6. Resources","text":""},{"location":"resources/#get-your-dynatrace-environment","title":"Get your Dynatrace environment","text":"<ul> <li>Create a Free Trial in Dynatrace</li> </ul>"},{"location":"resources/#documentation","title":"Documentation","text":"<ul> <li>Dynatrace documentation</li> </ul>"},{"location":"resources/#dynatrace-news","title":"Dynatrace news","text":"<p>https://www.dynatrace.com/news/blog/ - Dynatrace BLog</p> <ul> <li>What's Next? </li> </ul>"},{"location":"whats-next/","title":"7. What's next?","text":"<p>More to come</p> <ul> <li>Stay tuned, more enablements are coming whith more advanced usecases...</li> </ul>"},{"location":"snippets/admonitions/","title":"Admonitions","text":"<p>Warning</p> <p>This is a Warning </p> <p>Note</p> <p>This is a Note </p> <p>Important</p> <p>This is important </p> <p>Tipp</p> <p>This is a tipp </p>"},{"location":"snippets/disclaimer/","title":"Disclaimer","text":"<p>Support Policy</p> <p>This is an enablement project created by the Center of Excellence - Enablement Team at Dynatrace.</p> <p>Support is provided via GitHub issues only. The materials provided in this repository are offered \"as-is\" without any warranties, express or implied. Use them at your own risk.</p>"},{"location":"snippets/grail-requirements/","title":"Grail requirements","text":"<p>Requirements</p> <ul> <li>A Grail enabled Dynatrace SaaS Tenant (sign up here).</li> <li>A GitHub account to interact with the demo repository.</li> </ul>"},{"location":"snippets/view-code/","title":"View code","text":"<p>View the Code</p> <p>The code for this repository is hosted on GitHub. Click the \"View Code on GitHub\" link above.</p>"}]}